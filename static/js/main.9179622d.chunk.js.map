{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","data","setData","filteredArr","setFiltered","value","setValue","checked","setChecked","error","setError","regExpression","RegExp","a","fetch","headers","response","json","useEffect","getData","then","res","className","type","onChange","e","currentTarget","placeholder","event","target","onClick","isNaN","filter","str","length","map","match","push","el","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA8EeA,MAvEf,WAAgB,IAAD,EAEaC,qBAFb,mBAEJC,EAFI,KAEEC,EAFF,OAGwBF,qBAHxB,mBAGJG,EAHI,KAGSC,EAHT,OAIeJ,qBAJf,mBAIJK,EAJI,KAIGC,EAJH,OAKmBN,oBAAc,GALjC,mBAKJO,EALI,KAKKC,EALL,OAMeR,mBAAS,IANxB,mBAMJS,EANI,KAMGC,EANH,KAOLC,EAAgBJ,EAAUK,OAAO,GAAD,OAAIP,GAAS,KAAOO,OAAO,GAAD,OAAIP,GAAS,MAPlE,4CASX,4BAAAQ,EAAA,sEAC2BC,MAAM,sEAAuE,CAChGC,QAAS,CAAC,eAAgB,mBAAoB,8BAA+B,IAAK,OAAW,kCAFrG,cACUC,EADV,gBAIiBA,EAASC,OAJ1B,oFATW,sBA+CX,OAhCAC,qBAAU,YAfC,2CAgBPC,GAAUC,MAAK,SAAAC,GAAG,OAAInB,EAAQmB,EAAIpB,WACnC,IA+BC,qBAAKqB,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,UAAf,UACI,uBAAOA,UAAU,aAAaC,KAAK,OAAOC,SAjCjC,SAACC,GAC1Bf,EAAS,IACTJ,EAASmB,EAAEC,cAAcrB,QA+BiEA,MAAOA,EAC1EsB,YAAY,gBAClBlB,GAAS,qBAAKa,UAAU,QAAf,SAAwBb,IAClC,uBAAOa,UAAU,gBAAgBC,KAAK,WAAWlB,MAAOE,EAASiB,SAhC5D,SAACI,GAAD,OAA0CpB,EAAWoB,EAAMC,OAAOtB,YAiCvE,sBAAKe,UAAU,eAAf,UACI,wBAAQA,UAAU,oBAAoBQ,QAhC/B,WACvBC,MAAM1B,IAAoB,KAAVA,GAChBK,EAAS,gBACTJ,EAAS,MAETF,EAAW,OAACH,QAAD,IAACA,OAAD,EAACA,EAAM+B,QAAO,SAAAC,GAAG,OAAIA,EAAIC,QAAU7B,MAC9CC,EAAS,MA0BO,uBACA,wBAAQgB,UAAU,oBAAoBQ,QAvB9B,WAC5B,GAAGC,MAAM1B,IAAoB,KAAVA,EAAc,CAC7B,IAAMF,EAAc,GAChB,OAAJF,QAAI,IAAJA,KAAMkC,KAAI,SAAAF,GAAG,OAAIA,EAAIG,MAAMzB,GAAiBR,EAAYkC,KAAKJ,GAAO,MACpE7B,EAAYD,GACZG,EAAS,SAETI,EAAS,gBACTJ,EAAS,KAeO,8BAGR,sBAAKgB,UAAU,aAAf,UAC6B,KAAb,OAAXnB,QAAW,IAAXA,OAAA,EAAAA,EAAa+B,QAAe,6CAAwB,GACpD/B,EAAcA,EAAYgC,KAAI,SAACG,GAAD,OAAgB,sBAAMhB,UAAU,kBAAhB,SAA4CgB,GAALA,MAAmB,cCxDlHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCJdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.9179622d.chunk.js","sourcesContent":["import React, {ChangeEvent, useEffect, useState} from 'react';\nimport './scss/style.scss'\n\ntype ResponseType = {\n    data: Array<string>\n}\n\nfunction App() {\n\n    const [data, setData] = useState<Array<string>>()\n    const [filteredArr, setFiltered] = useState<Array<string>>()\n    const [value, setValue] = useState<any>()\n    const [checked, setChecked] = useState<any>(false)\n    const [error, setError] = useState('')\n    const regExpression = checked ? RegExp(`${value}`, 'g') : RegExp(`${value}`, 'gi');\n\n    async function getData(): Promise<ResponseType> {\n        const response = await fetch('https://cors-anywhere.herokuapp.com/https://www.mrsoft.by/data.json', {\n            headers: {'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*', \"Origin\" : 'https://artyrkozel.github.io'}\n        })\n        return await response.json()\n    }\n    useEffect(() => {\n        getData().then(res => setData(res.data))\n    }, [])\n\n    const onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setError('')\n        setValue(e.currentTarget.value)\n    }\n    const isCheckedHandler = (event: ChangeEvent<HTMLInputElement>) => setChecked(event.target.checked)\n\n    const onClickByLengthHandler = () => {\n        if (isNaN(value) || value === '') {\n            setError('Enter number')\n            setValue('')\n        } else {\n            setFiltered(data?.filter(str => str.length > +value))\n            setValue('')\n        }\n    }\n\n    const onClickBySymbolsHandler = () => {\n        if(isNaN(value) && value !== '' ){\n            const filteredArr = [] as Array<string>\n            data?.map(str => str.match(regExpression) ? filteredArr.push(str) : '')\n            setFiltered(filteredArr)\n            setValue('')\n        } else {\n            setError('Enter string')\n            setValue('')\n        }\n    }\n\n    return (\n        <div className=\"app\">\n            <div className=\"container\">\n                <div className=\"app__inner\">\n                    <div className=\"wrapper\">\n                        <input className=\"app__input\" type=\"text\" onChange={onChangeInputHandler} value={value}\n                               placeholder=\"Enter value\"/>\n                        {error && <div className=\"error\">{error}</div>}\n                        <input className=\"app__checkbox\" type=\"checkbox\" value={checked} onChange={isCheckedHandler}/>\n                        <div className=\"app__buttons\">\n                            <button className=\"app__buttons-item\" onClick={onClickByLengthHandler}>By length</button>\n                            <button className=\"app__buttons-item\" onClick={onClickBySymbolsHandler}>By symbols</button>\n                        </div>\n                    </div>\n                    <div className=\"app__field\">\n                        {filteredArr?.length === 0 ? <div>No matches</div> : ''}\n                        {filteredArr ? filteredArr.map((el: string) => <span className=\"app__field-item\" key={el}>{el}</span>) : ''}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}